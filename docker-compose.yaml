version: '3.7'
services:
    workspace_php7:
      container_name: workspace_php7
      build:
          context: ./php
          args:
            - GITHUB_TOKEN=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
            - PHP_VERSION=7.4
            - INSTALL_GD=true
            - INSTALL_REDIS=false
            - INSTALL_KAFKA=true
            - INSTALL_OPCACHE=true
            - INSTALL_MYSQL_CLIENT=true
            - INSTALL_ZOOKEEPER=false
      restart: always
      volumes:
        - ~/TidyDaily:/var/www

    workspace_php8:
      container_name: workspace_php8
      build:
        context: ./php
        args:
          - GITHUB_TOKEN=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
          - PHP_VERSION=8.1
          - INSTALL_GD=true
          - INSTALL_REDIS=false
          - INSTALL_KAFKA=true
          - INSTALL_OPCACHE=true
          - INSTALL_MYSQL_CLIENT=true
          - INSTALL_ZOOKEEPER=false
      restart: always
      volumes:
        - ~/TidyDaily:/var/www

    nginx:
      container_name: nginx
      build:
        context: ./nginx
      restart: always
      tty: true
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - ../:/var/www
        - ./nginx/logs:/var/log/nginx
        - ./nginx/sites:/etc/nginx/sites-available

    mysql:
      container_name: mysql
      build:
        context: ./mysql
      ports:
          - "3306:3306"
      volumes:
          - ./mysql/data:/var/lib/mysql
          - ./mysql/init:/docker-entrypoint-initdb.d
      environment:
        - MYSQL_ROOT_USER=root
        - MYSQL_ROOT_PASSWORD=root

    mysql_testing:
      container_name: mysql_testing
      build:
        context: ./mysql
      environment:
        - MYSQL_ROOT_USER=root
        - MYSQL_ROOT_PASSWORD=root
      volumes:
        - ./mysql/init:/docker-entrypoint-initdb.d
      tmpfs: /var/lib/mysql
      expose:
        - "33061"
      ports:
        - "33061:3306"
      depends_on:
        - mysql

    redis:
      container_name: redis
      image: redis:alpine
      user: root
      volumes:
        - ./redis/data:/data
      ports:
        - "6379:6379"

    zookeeper:
      container_name: zookeeper
      image: confluentinc/cp-zookeeper:latest
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000

    kafka:
      image: confluentinc/cp-kafka:latest
      container_name: kafka
      hostname: kafka
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      depends_on:
        - zookeeper

    kafdrop:
      container_name: kafdrop
      image: obsidiandynamics/kafdrop:latest
      ports:
        - "19000:9000"
      environment:
        KAFKA_BROKERCONNECT: "kafka:29092"
      depends_on:
        - kafka

